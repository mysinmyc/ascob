openapi: 3.0.1
info:
  title: ascob API
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/webhooks/runs/{webhookId}:
    post:
      tags:
      - run-webhook-controller
      summary: Update run info
      description: Update run info by using webhook. Some backend implementation are
        not aware abound identification keys or job status at submission. In this
        case the underling job must use this webhook to update run identifications
        keys and status
      operationId: updateRun
      parameters:
      - name: webhookId
        in: path
        description: Webhook id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRunWebhookRequest'
        required: true
      responses:
        "200":
          description: OK
      security:
      - X-Api-Token: []
  /api/security/tokens/{identifier}:
    post:
      tags:
      - security-controller
      summary: Generate a new api token
      operationId: createToken
      parameters:
      - name: identifier
        in: path
        description: token identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateTokenResponse'
      security:
      - X-Api-Token: []
    delete:
      tags:
      - security-controller
      summary: Revoke an api token
      operationId: deleteTokenByIdentifier
      parameters:
      - name: identifier
        in: path
        description: Token identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
      security:
      - X-Api-Token: []
  /api/search/runs:
    post:
      tags:
      - run-search-controller
      summary: Search job runs
      operationId: search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRunRequest'
        required: true
      responses:
        "200":
          description: Search results
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchRunResponse'
        "401":
          description: Not authorized
      security:
      - X-Api-Token: []
  /api/runs:
    post:
      tags:
      - run-controller
      summary: Submit a job
      operationId: submit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitRequest'
        required: true
      responses:
        "200":
          description: Job submitted
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubmitResponse'
        "401":
          description: User not authorized
        "400":
          description: Invalid job specs
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorPayload'
      security:
      - X-Api-Token: []
  /api/runs/{runId}/files/{fileId}:
    post:
      tags:
      - run-controller
      summary: Post an input file to the run
      description: It works only if the run is not started
      operationId: upload
      parameters:
      - name: runId
        in: path
        description: Run id
        required: true
        schema:
          type: integer
          format: int64
      - name: fileId
        in: path
        description: File identifier
        required: true
        schema:
          type: string
      responses:
        "500":
          description: An error occurred upload
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorPayload'
        "200":
          description: File uploaded
        "404":
          description: Run not found
        "401":
          description: User not authorized
        "400":
          description: Cannot add files to the run
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorPayload'
      security:
      - X-Api-Token: []
  /api/webhooks/runs/{webhookId}/files/{fileId}:
    get:
      tags:
      - run-webhook-controller
      summary: Download a run input file
      description: This operation can be used to retrieve files attached to execution
        from inside of running job
      operationId: getFile
      parameters:
      - name: webhookId
        in: path
        description: Webhook id
        required: true
        schema:
          type: string
      - name: fileId
        in: path
        description: File identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
      security:
      - X-Api-Token: []
  /api/security/whoami:
    get:
      tags:
      - security-controller
      summary: return the authentication info
      operationId: whoami
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WhoAmIResponse'
      security:
      - X-Api-Token: []
  /api/runs/{runId}:
    get:
      tags:
      - run-controller
      summary: Get status the run status
      operationId: getRunInfo
      parameters:
      - name: runId
        in: path
        description: Run id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Job submitted
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RunInfo'
        "404":
          description: Run not found
        "401":
          description: User not authorized
      security:
      - X-Api-Token: []
    delete:
      tags:
      - run-controller
      summary: Stop a run
      operationId: stop
      parameters:
      - name: runId
        in: path
        description: Run id
        required: true
        schema:
          type: integer
          format: int64
      - name: force
        in: query
        description: When set force backend to kill running tasks
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Run aborted
        "500":
          description: An error occurred during stop operations
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorPayload'
        "404":
          description: Run not found
        "401":
          description: User not authorized
      security:
      - X-Api-Token: []
  /api/runs/{runId}/start:
    get:
      tags:
      - run-controller
      summary: Start a run
      description: It works only for job defined ad manual start
      operationId: start
      parameters:
      - name: runId
        in: path
        description: Run id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Run started
        "404":
          description: Run not found
        "401":
          description: User not authorized
      security:
      - X-Api-Token: []
  /api/runs/{runId}/resubmit:
    get:
      tags:
      - run-controller
      summary: Resubmit a run
      description: Create a new job with the same spec of the source run
      operationId: resubmit
      parameters:
      - name: runId
        in: path
        description: Id of run to resubmit
        required: true
        schema:
          type: integer
          format: int64
      - name: submitter
        in: query
        description: New submitter
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Job resubmitted
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SubmitResponse'
        "404":
          description: Run not found
        "401":
          description: User not authorized
        "400":
          description: Invalid job specs
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorPayload'
      security:
      - X-Api-Token: []
  /api/runs/{runId}/refresh:
    get:
      tags:
      - run-controller
      summary: Refresh job status
      operationId: refreshRunInfo
      parameters:
      - name: runId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Refresh completed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RunInfo'
        "404":
          description: Run not found
        "401":
          description: User not authorized
        "500":
          description: An error occurred during refresh
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorPayload'
      security:
      - X-Api-Token: []
  /api/runs/{runId}/output.txt:
    get:
      tags:
      - run-controller
      summary: Get run output
      operationId: getRunOutput
      parameters:
      - name: runId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Job output
        "404":
          description: Run not found
        "401":
          description: User not authorized
        "500":
          description: An error occurred during output retrieval
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorPayload'
      security:
      - X-Api-Token: []
components:
  schemas:
    UpdateRunWebhookRequest:
      type: object
      properties:
        identificationKeys:
          type: object
          additionalProperties:
            type: string
        status:
          type: string
          enum:
          - DEFINED
          - WAITING_LOCKS
          - PENDING_SUBMIT
          - SUBMITTED
          - IN_DOUBT
          - RUNNING
          - SUCCEDED
          - FAILED
          - ABORTING
          - ABORTED
    CreateTokenRequest:
      type: object
      properties:
        expirySeconds:
          type: integer
          format: int64
        permissions:
          type: array
          items:
            type: string
            enum:
            - job_submit
            - job_run_manual_start
            - job_run_resubmit
            - job_run_upload_files
            - job_run_abort
            - job_run_read
            - job_run_output
            - job_run_refresh
            - job_run_search
            - webhook_update_status
            - webhook_identification_keys
            - webhook_get_files
            - security_token_write
    CreateTokenResponse:
      type: object
      properties:
        secret:
          type: string
    SearchRunRequest:
      type: object
      properties:
        submitterFilter:
          type: string
        statusFilter:
          type: array
          items:
            type: string
            enum:
            - DEFINED
            - WAITING_LOCKS
            - PENDING_SUBMIT
            - SUBMITTED
            - IN_DOUBT
            - RUNNING
            - SUCCEDED
            - FAILED
            - ABORTING
            - ABORTED
        createdBeforeFilter:
          type: string
          format: date-time
        createdAfterFilter:
          type: string
          format: date-time
        maxResults:
          type: integer
          format: int32
    RunInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        parentId:
          type: integer
          format: int64
        status:
          type: string
          enum:
          - DEFINED
          - WAITING_LOCKS
          - PENDING_SUBMIT
          - SUBMITTED
          - IN_DOUBT
          - RUNNING
          - SUCCEDED
          - FAILED
          - ABORTING
          - ABORTED
        description:
          type: string
        submitter:
          type: string
        definedTime:
          type: string
          format: date-time
        submissionTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
    SearchRunResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/RunInfo'
    JobSpec:
      type: object
      properties:
        description:
          type: string
        submitter:
          type: string
        labels:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: string
        parameters:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: string
        locks:
          type: array
          items:
            $ref: '#/components/schemas/LockSpec'
        manualStart:
          type: boolean
        runtimeVariables:
          type: boolean
    LockSpec:
      type: object
      properties:
        key:
          type: string
    SubmitRequest:
      type: object
      properties:
        jobSpec:
          $ref: '#/components/schemas/JobSpec'
    ErrorPayload:
      type: object
      properties:
        status:
          type: integer
          format: int32
        error:
          type: string
    SubmitResponse:
      type: object
      properties:
        runId:
          type: integer
          format: int64
    WhoAmIResponse:
      type: object
      properties:
        authorities:
          type: array
          items:
            type: string
  securitySchemes:
    X-Api-Token:
      type: apiKey
      description: Authentication via X-Api-Token header
      name: X-Api-Token
      in: header
